#summary Algorithms in this project
#labels featured

 * *lossless compression*
  * [http://code.google.com/p/kabopan/source/browse/trunk/lz77.py Lempel Ziv 77]
   * [http://code.google.com/p/kabopan/source/browse/trunk/lzss.py Lempel Ziv Storer Szymanski]
   * [http://code.google.com/p/kabopan/source/browse/trunk/brieflz.py BriefLZ]
   * [http://code.google.com/p/kabopan/source/browse/trunk/aplib.py aPLib]
   * JCALG1
  * [http://code.google.com/p/kabopan/source/browse/trunk/lz78.py Lempel Ziv 78]
   * [http://code.google.com/p/kabopan/source/browse/trunk/lzw.py Lempel Ziv Welch]
  * [http://code.google.com/p/kabopan/source/browse/trunk/rle.py Run-length encoding]
  * LZO
  * LZMA
  * zlib
  * bzip2
 * *transform*
  * [http://code.google.com/p/kabopan/source/browse/trunk/bwt.py Burrows Wheeler]
  * [http://code.google.com/p/kabopan/source/browse/trunk/mtf.py Move to front]
 * *universal encoding*
  * unary
  * elias gamma, delta, omega
  * fibonacci
 * *entropy encoding*
  * [http://code.google.com/p/kabopan/source/browse/trunk/sfc.py Shannon Fano]
  * [http://code.google.com/p/kabopan/source/browse/trunk/huffman.py Huffman]
  * Range
  * Arithmetic
 * *encoding*
  * [http://code.google.com/p/kabopan/source/browse/trunk/base.py Base16/Base32/Base64]
 * *cyclic redundancy check*
 * *checksum*
  * flechter32
  * adler32
 * *cryptographic hash/message digest*
  * Haval
  * MD2, MD4, MD5, MD6
  * RIPEMD
  * SHA-0, SHA-1, SHA-2
  * Tiger
  * WHIRLPOOL
 * *Message Authentication Code*
 * *Pseudorandom Number Generator*
  * Mersenne twister
 * *stream cipher*
  * RC4
 * *block cipher*
  * Feistel Network
  * Lucifer
  * Data Encryption Standard - DES
  * Triple DES
  * Rijndael - AES
  * Serpent
  * Blowfish
  * Twofish
  * Threefish
  * Tiny Encryption Algorithm - TEA
  * XTEA
  * XXTEA
  * RC2, RC5, RC6
  * Skein
 * *substitution cipher*
  * alberti cipher disk
  * bellaso first and second
  * vigenere
  * rot5, rot13, rot18, rot47
  * playfair
  * affine
  * ascii85
  * uuencode, xxencode
